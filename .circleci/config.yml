version: 2.1
commands:
  prepare-git:
    steps:
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - add_ssh_keys:
          fingerprints:
            - "ea:f2:f4:11:35:3f:87:04:bb:c4:84:50:ba:64:a1:5d"

  boot-dctest:
    description: "datacenter test"
    parameters:
      neco-release-branch:
        type: boolean
        default: true
      placemat-menu-file:
        type: string
        default: menu.yml
    steps:
      - when:
          condition: <<parameters.neco-release-branch>>
          steps:
          - run:
              name: Checkout Neco (release)
              command: |
                git clone --depth 1 https://github.com/cybozu-go/neco -b release
      - unless:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: Checkout Neco (specified branch)
                command: |
                  NECO_BRANCH=${CIRCLE_BRANCH}

                  # If there is not NECO_BRANCH branch in the cybozu-go/neco repository, git clone will fail.
                  echo "checkout $NECO_BRANCH"
                  git clone --depth 1 https://github.com/cybozu-go/neco -b $NECO_BRANCH
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            echo "$QUAY_PASSWORD" > neco/secrets
      - run:
          name: Store github-token
          command: |
            echo "$NECO_GITHUB_TOKEN" > neco/github-token
      - run:
          name: Watch all pod logs
          command: |
            cd neco
            ./bin/watch_podlogs
          background: true
      - when:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: dctest(bootstrap) TAG=release
                command: |
                  cd neco
                  ./bin/run-dctest.sh bootstrap release "" <<parameters.placemat-menu-file>>
                no_output_timeout: 31m
      - unless:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: dctest(bootstrap) TAG=""
                command: |
                  cd neco
                  ./bin/run-dctest.sh bootstrap "" "" <<parameters.placemat-menu-file>>
                no_output_timeout: 31m

  delete-instance:
    description: remove GCP instance for this test
    parameters:
      need-copy-env:
        type: boolean
        default: true
    steps:
      - when:
          condition: <<parameters.need-copy-env>>
          steps:
            - run:
                name: Copy env file from neco
                command: cp ./neco/bin/env ./bin/env
                when: always
      - run:
          name: Set the instance lifetime to 10 minutes
          command: |
            . ./bin/env
            $GCLOUD compute instances add-metadata ${INSTANCE_NAME} --zone ${ZONE} \
              --metadata shutdown-at=$(date -Iseconds -d+10minutes)
          when: on_fail
      - notify-slack-to-extend
      - run:
          name: Remove instance
          command: |
            . ./bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  notify-slack-to-extend:
    description: "notify slack to extend the lifetime of the GCP instance"
    steps:
      - run:
          name: Notify Slack to extend the lifetime of the GCP instance
          command: |
            . ./bin/env
            curl -X POST -H 'Content-type: application/json' --data "{
              \"blocks\": [
                {
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"Failed: ${CIRCLE_USERNAME}'s workflow (${CIRCLE_JOB}) in <https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/workflows/${CIRCLE_PROJECT_REPONAME}|${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}> (<https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/tree/${CIRCLE_BRANCH}|${CIRCLE_BRANCH}>)\n Do you extend the lifetime of ${INSTANCE_NAME}?\"
                  },
                  \"accessory\": {
                    \"type\": \"button\",
                    \"text\": {
                      \"type\": \"plain_text\",
                      \"text\": \"Extend\",
                      \"emoji\": true
                    },
                    \"value\": \"${INSTANCE_NAME}\"
                  }
                }
              ]
            }" $SLACK_WEBHOOK_URL
          when: on_fail

jobs:
  test:
    docker:
      - image: quay.io/cybozu/golang:1.13-bionic
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            cd test
            make setup SUDO=
      - run: |
          cd test
          make test

  bootstrap:
    docker:
      - image: google/cloud-sdk
    parameters:
      neco-release-branch:
        type: boolean
        default: true
    steps:
      - checkout
      - boot-dctest:
          neco-release-branch: <<parameters.neco-release-branch>>
      - run:
          name: Test neco-apps
          command: |
            export NECO_DIR=$(pwd)/neco
            ./bin/run-test.sh
          no_output_timeout: 31m
      - delete-instance

  upgrade-master:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at master
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade ./bin/run-test.sh
          no_output_timeout: 31m
      - delete-instance

  upgrade-stage:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at stage
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade BASE_BRANCH=stage ./bin/run-test.sh
          no_output_timeout: 31m
      - delete-instance

  upgrade-release:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at release
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade BASE_BRANCH=release ./bin/run-test.sh
          no_output_timeout: 31m
      - delete-instance

  bootstrap-storage:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest:
          neco-release-branch: false
          placemat-menu-file: menu-ss.yml
      - run:
          name: Test neco-apps
          command: |
            export NECO_DIR=$(pwd)/neco
            ./bin/run-storage-test.sh
          no_output_timeout: 31m
      - delete-instance

  kindtest:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Run test
          command: |
            curl -sSLf -o ./bin/env https://raw.githubusercontent.com/cybozu-go/neco/master/bin/env
            ./bin/run-kindtest.sh
          no_output_timeout: 31m
      - delete-instance:
          need-copy-env: false

  create-pull-request-stage:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - prepare-git
      - checkout
      - run:
          name: Check diff
          command: |
            git fetch -t origin
            diffs=$(git diff --name-only master origin/stage)
            if [ "$diffs" = "" ]; then touch .skip; exit 0; fi
            printf "%s\n" "$diffs"
      - run:
          name: Create a pull request
          command: |
            if [ -f .skip ]; then exit 0; fi
            BRANCH_NAME="stage-$(date +%Y.%m.%d)-${CIRCLE_BUILD_NUM}"
            git checkout -b op-${BRANCH_NAME} origin/stage
            git merge --no-edit master
            git push git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git op-${BRANCH_NAME}:op-${BRANCH_NAME}
            hub pull-request --message="[CI] Stage ${BRANCH_NAME}" --base=cybozu-go:stage --head=cybozu-go:op-${BRANCH_NAME}
      - run:
          name: Create a pull request for neco-apps-secret staging branch
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/run-neco-apps-secret-ci.sh
  push-release-tag:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - prepare-git
      - checkout
      - run: git checkout stage
      - run: git merge --no-commit --no-ff ${CIRCLE_SHA1}
      - run:
          name: Push tag to GitHub
          command: |
            CI_REMOTE_REPOSITORY="git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git"
            TAG_NAME="release-$(date +%Y.%m.%d)-${CIRCLE_BUILD_NUM}"
            git tag ${TAG_NAME}
            git push ${CI_REMOTE_REPOSITORY} stage ${TAG_NAME}
  create-pull-request-release:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - prepare-git
      - checkout
      - run:
          name: Create a pull request
          command: |
            git fetch -t origin
            git checkout -b op-${CIRCLE_TAG} origin/release
            git merge --no-edit ${CIRCLE_TAG}
            git push git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git op-${CIRCLE_TAG}:op-${CIRCLE_TAG}
            hub pull-request --message="[CI] Release ${CIRCLE_TAG}" --base=cybozu-go:release --head=cybozu-go:op-${CIRCLE_TAG}

  clean-dns:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Delete DNS records
          command: gcloud --project=neco-test dns record-sets import --zone=gcp0 --delete-all-existing /dev/null

workflows:
  version: 2
  main:
    jobs:
      - test
      - kindtest:
          filters:
            branches:
              ignore: ["master", "stage", "release", /^op-(stage|release)-.*/]

  manual-dctest:
    jobs:
      - hold:
          type: approval
      - bootstrap:
          name: bootstrap
          requires:
            - hold
      - upgrade-master:
          requires:
            - hold
          filters:
            branches:
              ignore: ["master", "stage", "release", /^op-(stage|release)-.*/]
      - upgrade-release:
          requires:
            - hold
      - upgrade-stage:
          requires:
            - hold
      - bootstrap-storage:
          requires:
            - hold
      - create-pull-request-stage:
          filters:
            branches:
              only:
                - master
          requires:
            - bootstrap
            - upgrade-stage
            - upgrade-release

  # Test with the specified neco branch.
  manual-dctest-with-neco-feature-branch:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              ignore: ["master", "stage", "release", /^op-(stage|release)-.*/]
      - bootstrap:
          name: bootstrap-with-neco-branch
          neco-release-branch: false
          requires:
            - hold
          filters:
            branches:
              ignore: ["master", "stage", "release", /^op-(stage|release)-.*/]

  daily:
    triggers:
      - schedule:
          cron: "10 15 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - clean-dns
      - bootstrap
      - upgrade-stage
      - upgrade-release
      - create-pull-request-stage:
          requires:
            - bootstrap
            - upgrade-stage
            - upgrade-release
  release-tag:
    jobs:
      - push-release-tag:
          filters:
            branches:
              only: stage
  production-release:
    jobs:
      - create-pull-request-release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
