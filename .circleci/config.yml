version: 2.1
commands:
  boot-dctest:
    description: "datacenter test"
    parameters:
      neco-release-branch:
        type: boolean
        default: true
    steps:
      - when:
          condition: <<parameters.neco-release-branch>>
          steps:
          - run:
              name: Checkout Neco (release)
              command: |
                git clone --depth 1 https://github.com/cybozu-go/neco -b release
      - unless:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: Checkout Neco (specified branch)
                command: |
                  # If CIRCLE_BRANCH has specified prefix("with-neco-branch-"), change the branch to be cloned.
                  NECO_BRANCH=${CIRCLE_BRANCH#with-neco-branch-}

                  # If there is not NECO_BRANCH branch in the cybozu-go/neco repository, git clone will fail.
                  echo "checkout $NECO_BRANCH"
                  git clone --depth 1 https://github.com/cybozu-go/neco -b $NECO_BRANCH
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            echo "$QUAY_PASSWORD" > neco/secrets
      - run:
          name: Store github-token
          command: |
            echo "$NECO_GITHUB_TOKEN" > neco/github-token
      - run:
          name: Watch all pod logs
          command: |
            cd neco
            ./bin/watch_podlogs
          background: true
      - when:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: dctest(bootstrap) TAG=release
                command: |
                  cd neco
                  ./bin/run-dctest.sh bootstrap release
                no_output_timeout: 20m
      - unless:
          condition: <<parameters.neco-release-branch>>
          steps:
            - run:
                name: dctest(bootstrap) TAG=""
                command: |
                  cd neco
                  ./bin/run-dctest.sh bootstrap
                no_output_timeout: 20m

jobs:
  test:
    docker:
      - image: quay.io/cybozu/golang:1.13-bionic
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            cd test
            make setup SUDO=
      - run: |
          cd test
          make test

  bootstrap:
    docker:
      - image: google/cloud-sdk
    parameters:
      neco-release-branch:
        type: boolean
        default: true
    steps:
      - checkout
      - boot-dctest:
          neco-release-branch: <<parameters.neco-release-branch>>
      - run:
          name: Test neco-apps
          command: |
            export NECO_DIR=$(pwd)/neco
            ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  upgrade-master:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at master
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  upgrade-stage:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at stage
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade BASE_BRANCH=stage ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  upgrade-release:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at release
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=dctest-upgrade BASE_BRANCH=release ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  kindtest:
    docker:
      - image: google/cloud-sdk
        environment:
            BINDIR: /usr/local/bin
            STERN_VERSION: "1.11.0"
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Install stern
          command: |
            curl -o stern https://github.com/wercker/stern/releases/download/$(STERN_VERSION)/stern_linux_amd64
            chmod +x stern
            . ./bin/env
            $GCLOUD compute scp --zone=${ZONE} stern cybozu@${INSTANCE_NAME}:${BINDIR}
      - run:
          name: Watch all pod logs
          command: |
            cd neco-apps
            ./bin/watch_podlogs
          background: true
      - run:
          name: Run test
          command: |
            curl -sSLf -o ./bin/env https://raw.githubusercontent.com/cybozu-go/neco/master/bin/env
            ./bin/run-kindtest.sh
      - run:
          name: Remove instance
          command: |
            . ./bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  merge-stage:
    docker:
      - image: quay.io/cybozu/golang:1.13-bionic
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ea:f2:f4:11:35:3f:87:04:bb:c4:84:50:ba:64:a1:5d"
      - checkout
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - run: git checkout stage
      - run: git merge --no-commit --no-ff ${CIRCLE_SHA1}
      - run:
          name: Check diff
          command: |
            diffs=$(git status -s)
            if [ "$diffs" = "" ]; then touch .skip; exit 0; fi
            printf "%s\n" "$diffs"
      # Skip the following steps if there is no difference.
      - run:
          name: Commit, tag and push to GitHub
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/commit-push.sh
      - run:
          name: Merge neco-apps-secret
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/run-neco-apps-secret-ci.sh

  create-pull-request:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - checkout
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - add_ssh_keys:
          fingerprints:
            - "ea:f2:f4:11:35:3f:87:04:bb:c4:84:50:ba:64:a1:5d"
      - run:
          name: Create a branch with the tag
          command: |
            git fetch -t origin
            git checkout -b op-${CIRCLE_TAG} origin/release
            git merge --no-edit ${CIRCLE_TAG}
            git push git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git op-${CIRCLE_TAG}:op-${CIRCLE_TAG}
      - run:
          name: Create a pull request
          command: |
            hub pull-request --message="[CI] Release ${CIRCLE_TAG}" --base=cybozu-go:release --head=cybozu-go:op-${CIRCLE_TAG}

  clean-dns:
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Delete DNS records
          command: gcloud --project=neco-test dns record-sets import --zone=gcp0 --delete-all-existing /dev/null

workflows:
  version: 2
  main:
    jobs:
      - test
      - kindtest:
          filters:
            branches:
              ignore: ["master", "stage", "release"]

  manual-dctest:
    jobs:
      - hold:
          type: approval
      - bootstrap:
          name: bootstrap
          requires:
            - hold
      # If branch name has specified prefix("with-neco-branch-hoge-piyo"), testing with the specified neco branch("hoge-piyo").
      - bootstrap:
          name: bootstrap-with-neco-branch
          neco-release-branch: false
          filters:
            branches:
              only: /^with-neco-branch-.*$/
      - upgrade-master:
          requires:
            - hold
          filters:
            branches:
              ignore: ["master", "stage", "release"]
      - upgrade-release:
          requires:
            - hold
      - upgrade-stage:
          requires:
            - hold
      - merge-stage:
          filters:
            branches:
              only:
                - master
          requires:
            - bootstrap
            - upgrade-stage
            - upgrade-release

  daily:
    triggers:
      - schedule:
          cron: "10 15 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - clean-dns
      - bootstrap
      - upgrade-stage
      - upgrade-release
      - merge-stage:
          requires:
            - bootstrap
            - upgrade-stage
            - upgrade-release

  production-release:
    jobs:
      - create-pull-request:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
